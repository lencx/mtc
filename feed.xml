<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
<channel>
  <title>浮之静</title>
  <atom:link href="https://z.nofwl.com/feed.xml" rel="self" type="application/rss+xml" />
  <link>https://z.nofwl.com</link>
  <description>浮之静 技术社区</description>
  <item>
  <title><![CDATA[【自荐】- 文章 & 开源]]></title>
  <link>https://github.com/lencx/z/discussions/49</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/49</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<h2>准则</h2>
<p>自己维护了一个技术群，希望将其打造成一个高质量的技术交流群，如果放开权限，很快就会沦为推文群。完全禁止技术文章分享，似乎也并不合理。故开辟此处，为群之外的延伸阅读，此链接将更新至群公告。 好的社区需要大家共同努力来建设 <g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png">🙏</g-emoji>。<br>
要推荐文章，需要提供：</p>
<ul>
<li><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> markdown 格式排版：<a href="https://guides.github.com/features/mastering-markdown/">学习文档</a></li>
<li><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> <code>推荐人</code> + <code>文章链接及标题</code> + <code>推荐理由</code>
<ul>
<li>推荐人：<code>昵称</code>或常用<code>社区 ID</code>，可以附加个人链接： <code>[`推荐人`](个人链接)</code></li>
<li>推荐理由：文章截取或自身思考</li>
</ul>
</li>
<li><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> 文章列表时间排序由近及远（最新推荐放在第一条）</li>
<li><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> 号主可以自己开一个评论，添加自我介绍，然后在评论里更新推文或开源列表</li>
<li><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> 非号主的可以放置在公共推荐区，如果长期参与，也可以单独开一个评论</li>
<li><g-emoji class="g-emoji" alias="u7981" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f232.png">🈲</g-emoji> 推荐文章夹带<code>卖课</code>及<code>广告</code></li>
<li><g-emoji class="g-emoji" alias="u7981" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f232.png">🈲</g-emoji> 敏感话题</li>
</ul>
<hr>
<p>示例：</p>
<div class="highlight highlight-source-gfm position-relative" data-snippet-clipboard-copy-content="- `推荐人` [文章标题](文章链接) - 推荐理由
- [`推荐人`](个人链接) [文章标题](文章链接) - 推荐理由
- [`lencx`](https://github.com/lencx) [技术是什么？](https://github.com/lencx/z/discussions/51) -  技术就是问题的解决方案，与...
"><pre><span class="pl-v">-</span> <span class="pl-c1">`推荐人`</span> [<span class="pl-e">文章标题</span>](文章链接) - 推荐理由
<span class="pl-v">-</span> [<span class="pl-e">`推荐人`</span>](个人链接) [<span class="pl-e">文章标题</span>](文章链接) - 推荐理由
<span class="pl-v">-</span> [<span class="pl-e">`lencx`</span>](https://github.com/lencx) [<span class="pl-e">技术是什么？</span>](https://github.com/lencx/z/discussions/51) -  技术就是问题的解决方案，与...</pre></div>
<p>效果预览：</p>
<ul>
<li><a href="https://github.com/lencx"><code>lencx</code></a> <a href="https://github.com/lencx/z/discussions/51" data-hovercard-type="discussion" data-hovercard-url="/lencx/z/discussions/51/hovercard">技术是什么？</a> - 技术就是问题的解决方案，与编程语言无关，与人无关，当遇到的问题无法解决时，能够把这个问题解决掉的东西，就是技术。概括成一个流程就是：<code>遇到问题 -&gt; 分析问题 -&gt; 抽象描述 -&gt; 提供步骤 -&gt; 解决问题</code>。当问题被解决后，技术本身也就产生了价值。能解决问题越多的技术，其影响力也就越大。</li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[基于 Github Discussions 构建个人 Blog]]></title>
  <link>https://github.com/lencx/z/discussions/50</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/50</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<p><code>📅 2021.07.14</code></p>
<blockquote>
<p>待更新</p>
</blockquote>
<h2>背景</h2>
<p>写这篇文章，我也会问自己，现在已经有了那么多成熟稳定的写作平台，为何还要自己去搭建？</p>
<p>国内有 <code>公众号</code>，<code>InfoQ</code>，<code>语雀</code>，<code>掘金</code>，<code>知乎</code>，<code>简书</code>；国外有 <code>DEV Community</code>，<code>Medium</code> 等等，不下几十个平台社区。</p>
<p>即使不选择上面的平台社区，还可以选择</p>]]></description>
</item>
<item>
  <title><![CDATA[技术是什么？]]></title>
  <link>https://github.com/lencx/z/discussions/51</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/51</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<p><code>📅 2021.05.04</code></p>
<blockquote>
<p>一条朋友圈评论所引发的一系列思考</p>
</blockquote>
<h2>背景</h2>
<p>我发了朋友圈：<code>做了个奇怪的梦，梦见被离职了，理由竟然是：你技术太菜了</code> <br>
我补充评论：<code>我还没想明白怎么回事，就醒了。有点遗憾的是：想再努力反驳两句，结果没机会了…</code> <br>
很多人评论：<code>梦是反的</code> <br>
我的回复：<code>那就是到技术的瓶颈期了</code> <br>
YaoL.in评论：<code>这衍生出一个很好的问题：「你如何证明技术不菜？」</code> <br>
我的回复：<code>个人感觉还是影响力，即使你的技术很厉害，没人知道，或者别人也不会去使用你的技术，似乎一切为零（为零仅代表这个技术所产生的影响力，不代表技术本身的价值）</code></p>
<hr>
<h2>我对技术的理解</h2>
<p><code>技术本身并没有价值，衡量一个技术的标准，应该是这门技术所产生的影响力。</code></p>
<p>我之前也一直认为只需要专心做好技术就可以了，<strong>是金子总会发光的，这句话没有任何问题，但是缺少了一个很重要的前提，何时才会发光？</strong> 人的生命是有限的，我认为能够更快的将自己曝光，用自己的技术或文章去影响到一些人，还是很有“必要的”（自己体会，这里可以代表着名，利，精神上，物质上等）。</p>
<p>我参与 GitHub 开源及写文章博客也很久了（惭愧，文章博客输出有点少），慢慢发现，很多好的技术，文章，项目都属于被埋没状态。一直被埋没，就不会产生价值，这就会造成一个很大的问题，<strong>技术自身有价值，但却不能用来解决问题，该如何去衡量这个技术？</strong></p>
<h2>自己封神，不如别人对你称神</h2>
<p><code>帮别人解决问题，来体现自己的价值</code></p>
<p>回答别人提出的问题，也是对自身技术的 <strong>review</strong>，<strong>review</strong> 的次数多了，这些技术点就会刻在骨子里。当一个问题讨论的深入时，往往引发的是一系列的知识点。由点成面，再成网（单纯靠回答问题，很难构建出知识网，但是可以作为一个切入点）。</p>
<p>当我学习技术累的时候，就喜欢在技术群里看别人提问题，能回答的就回答，不能回答的时候就看别人如何回答。</p>
<p>闷头搞技术，提升的只是一个人的能力，分享，提升的是一群人。<strong>有些人可能会觉得技术如果拿来分享，别人比自己强了，怎么办，那岂不是越来越卷了？</strong> 不知道别人有没有这么想，反正我以前有过这种想法，但是随着自己做开源，写文章，回答别人的问题，不但没有这种想法了，反而想把更多的技术拿来分享，进行探讨。</p>
<p>原因有以下几点：</p>
<ul>
<li><strong>表达能力</strong>：能够把自己掌握的技术，抽象表达出来，这个很难。要达到这个目标，让什么都不懂的人听懂你在说什么，就需要做到知识深入浅出。</li>
<li><strong>Review &amp; Share</strong>：每次分享，都是对技术的一次 “review”，会产生新的理解或者引申出新的知识点。用分享的方式去学习（共赢）。</li>
<li><strong>技术探讨</strong>：可遇不可求，分享技术，如果遇到知己，也是莫大的幸运。</li>
<li><strong>成就感</strong>：这属于学习的一个正反馈，奖赏机制在学习技术方面，我觉得还是很有必要的，因为学习本身就比较枯燥，能找到一个坚持下去的理由，不容易。举个例子，我个人就拿 <code>每天一个 github 小绿点（github commit 记录），让自己持续学习与输出</code> 作为目标。</li>
<li><strong>无形监督</strong>：这个其实是为了防止自欺欺人，以为自己不分享别人就不会学习了...，有压力才会有动力，因为当自己再无可分享的东西时，则证明自己已经没有了知识的输出，需要进行自我反思。</li>
</ul>
<p>在各大技术群里呆的久了，发现群友们提出的问题虽千奇百怪，但整理下来其实也就几大类：</p>
<ul>
<li><strong>想吃现成的</strong>：遇到问题不管三七二十一，先丢群里，等待别人的回答，如果有人回答，能吃到嘴也算“不亏”；运气不好的，直接让群变得安静起来（群静音神器）；还有就是群友们会围绕这个问题开始风马牛不相及的吹水。等不到问题的解决方案，则白白浪费了时间。</li>
<li><strong>不会提问的</strong>：这种人似乎还不占少数，比想吃现成的能稍微“好点”吧，<code>因为不光浪费自己的时间，还浪费了看问题回答问题人的时间，有效地防止了内卷</code>。不会提问通常表现为问题没有上下文，只有一个报错信息，问怎么解决，在线急等。如果有人解决过类似问题还好说，没有解决过这类问题的则表示一脸懵逼，连个插话的机会都不给（抠门，惜字如金，只发问题不发产生背景及预期）。</li>
<li><strong>会提问的</strong>：这种人一般都是思路清晰的，也做过了大量的技术方案尝试，能够言简意赅的说明目前困境，希望能够得到什么样的帮助，目的性很强（褒义词，知道自己想要什么总比什么不知道要好）。</li>
<li><strong>进行探讨的</strong>：强烈推荐的方式，要讨论，就避免不了问题的梳理，在梳理问题的过程中，可能会发现自己漏掉的一些细节。<a href="https://baike.baidu.com/item/%E5%B0%8F%E9%BB%84%E9%B8%AD%E8%B0%83%E8%AF%95%E6%B3%95/16569594" rel="nofollow">小黄鸭调试法</a> 值得拥有，有些问题解决不了，很可能也是因为自己钻了牛角尖，讨论也可以让自己快速走出思维误区。</li>
</ul>
<h2>学会提问</h2>
<p>遇到问题，不要慌，常见的百分之八九十问题，网上都是有解决方案的。当搜索引擎都不能帮助你解决这个问题的时候，证明你遇到的问题“有点东西”了，这是好事情。需要去一些专业的技术提问社区去转转了，比如 <a href="https://stackoverflow.com" rel="nofollow">Stack Overflow</a>，或者 <code>GitHub Issues</code>（主要针对开源项目），还有就是此技术相关的社区，论坛，<code>Slack</code>，<code>Discord</code>等。</p>
<p>一个好的问题模板，例如 <a href="https://github.com/vitejs/vite/blob/main/.github/ISSUE_TEMPLATE/bug_report.md">vite ISSUE_TEMPLATE/bug_report</a> 一般包含以下几个要素：</p>
<ul>
<li><strong>问题描述</strong>：简短的表述清楚问题，切记啰嗦。</li>
<li><strong>环境信息</strong>：问题发生的环境（系统信息，软件版本，浏览器版本等）。</li>
<li><strong>如何复现</strong>：提供问题复现步骤1，2，3，可以配合适当的错误截图及说明。</li>
<li><strong>预期结果</strong>：希望达到什么样的结果。</li>
</ul>
<p>解决问题，根据我多年来的实践总结，一般分为以下几步：</p>
<ol>
<li><strong>抽象</strong>: 用技术关键词去描述问题</li>
<li><strong>搜索</strong>：根据关键词去搜索问题
<ul>
<li>尽量避免使用百度，有条件的使用 <a href="https://www.google.com" rel="nofollow">Google</a>，没条件可以使用 <a href="https://www.bing.com" rel="nofollow">Bing</a>。</li>
<li>如果中文搜索结果不理想，可以将关键词转为对应英语再去搜索。</li>
<li>翻译软件：<a href="https://www.deepl.com" rel="nofollow">DeepL 翻译</a>，<a href="https://translate.google.cn" rel="nofollow">Google 翻译</a>等。</li>
<li>学习一些搜索相关的高级技巧
<ul>
<li><a href="https://www.theguardian.com/technology/2016/jan/15/how-to-use-search-like-a-pro-10-tips-and-tricks-for-google-and-beyond" rel="nofollow">How to use search like a pro: 10 tips and tricks for Google and beyond</a></li>
<li><a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E5%B7%A7" rel="nofollow">搜索引擎技巧</a></li>
<li><a href="https://jingyan.baidu.com/article/0964eca24b71978285f536f4.html" rel="nofollow">百度搜索技巧</a></li>
<li><a href="http://help.bing.microsoft.com/apex/index/18/zh-CHS/10002" rel="nofollow">Bing 高级搜索</a></li>
<li><a href="https://github.com/search/advanced">GitHub advanced search</a></li>
</ul>
</li>
</ul>
</li>
<li><strong>延伸搜索</strong>：围绕关键词，扩大搜索范围，查看一些相关链接</li>
</ol>
<p><strong><g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png">🎉</g-emoji> Google 高级搜索的10个技巧</strong>：<br>
1）准确搜索（Exact phrase）<br>
2）排除关键词（ Exclude terms）<br>
3）用 OR (或)逻辑进行搜索（Either OR）<br>
4）同义词搜索 ~（Synonym search）<br>
5）站内搜索（Search within a site）<br>
6）善用 * 星号（The power of the asterisk）<br>
7）在两个数值之间进行搜索（Searching between two values）<br>
8）在网页标题, 链接和主体中搜索关键词（Search for word in the body, title or URL of a page）<br>
9）搜索相关网站（Search for related sites）<br>
10）搜索技能的组合使用（Combine them）</p>
<h2>总结</h2>
<p>所以再次回到文章的标题，<code>技术是什么？</code>，技术就是问题的解决方案，与编程语言无关，与人无关，当遇到的问题无法解决时，能够把这个问题解决掉的东西，我认为这就是技术。技术本身并不高大上，概括成一个流程就是：<code>遇到问题 -&gt; 分析问题 -&gt; 抽象描述 -&gt; 提供步骤 -&gt; 解决问题</code>。当问题被解决后，技术本身也就产生了价值。能解决问题越多的技术，其影响力也就越大，提供此问题解决方案的人也就越厉害（此结论只是站在一个角度的个人观点，请勿过度解读）。所以<code>要证明自己不菜，就要不断地去解决问题，帮助的人和解决的问题越多，你就是别人眼中的“神”，而不是自封为神。自己时刻要保持着对知识的敬畏之心</code>。</p>]]></description>
</item>
<item>
  <title><![CDATA[Web Development Guide]]></title>
  <link>https://github.com/lencx/z/discussions/8</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/8</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<h2>Guide</h2>
<ul>
<li><a href="https://www.freecodecamp.org" rel="nofollow">Learn to Code — For Free — Coding Courses for Busy People</a> - Learn to Code — For Free.</li>
<li><a href="https://developer.mozilla.org" rel="nofollow">MDN Web Docs</a> - The MDN Web Docs site provides information about Open Web technologies including HTML, CSS, and APIs for both Web sites and progressive web apps.</li>
<li><a href="https://developers.google.com/web" rel="nofollow">Web  |  Google Developers</a> - Build the next generation of web experiences.</li>
<li><a href="https://github.com/microsoft/Web-Dev-For-Beginners">Web Development for Beginners - A Curriculum</a> - 24 Lessons, 12 Weeks, Get Started as a Web Developer</li>
<li><a href="https://javascript.info/" rel="nofollow">The Modern JavaScript Tutorial</a> - Modern JavaScript Tutorial: simple, but detailed explanations with examples and tasks, including: closures, document and events, object oriented programming and more.</li>
<li><a href="https://caniuse.com" rel="nofollow">Can I use... Support tables for HTML5, CSS3, etc</a> - "Can I use" provides up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers.</li>
<li><a href="https://www.w3schools.com" rel="nofollow">W3Schools Online Web Tutorials</a> - Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, Python, PHP, Bootstrap, Java, XML and more.</li>
<li><a href="https://dev.to" rel="nofollow">DEV Community <g-emoji class="g-emoji" alias="woman_technologist" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bb.png">👩‍💻</g-emoji><g-emoji class="g-emoji" alias="man_technologist" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bb.png">👨‍💻</g-emoji></a> - A constructive and inclusive social network for software developers. With you every step of your journey.</li>
<li><a href="https://medium.com" rel="nofollow">Medium</a> - Every idea needs a Medium.</li>
<li><a href="https://www.sitepoint.com" rel="nofollow">Sitepoint</a> - Stay at the cutting edge of tech</li>
<li><a href="https://fireship.io" rel="nofollow">Fireship.io</a> - Training and Consulting for App Developers | Full Courses, Video Lessons, Chat, and More.</li>
<li><a href="https://ui.dev" rel="nofollow">Master the JavaScript Ecosystem - ui.dev</a> - Comprehensive learning resources for mastering the JavaScript ecosystem.</li>
<li><a href="https://reacttraining.com" rel="nofollow">React Training</a> - React Corporate Workshops, Training, and Consulting.</li>
<li><a href="https://github.com/taowen/awesome-lowcode">awesome-lowcode</a> - 国内低代码平台从业者交流</li>
<li><a href="https://github.com/dexteryy/spellbook-of-modern-webdev">Spellbook of Modern Web Dev</a> - A Big Picture, Thesaurus, and Taxonomy of Modern JavaScript Web Development</li>
<li><a href="https://github.com/lencx/z/discussions/33" data-hovercard-type="discussion" data-hovercard-url="/lencx/z/discussions/33/hovercard">JavaScript Series</a></li>
<li><a href="https://github.com/lencx/z/discussions/5" data-hovercard-type="discussion" data-hovercard-url="/lencx/z/discussions/5/hovercard">CSS Series</a></li>
</ul>
<h2>Frame</h2>
<ul>
<li><a href="https://reactjs.org" rel="nofollow">React</a> - A JavaScript library for building user interfaces
<ul>
<li><a href="https://github.com/preactjs/preact">Preact</a> - <g-emoji class="g-emoji" alias="atom_symbol" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/269b.png">⚛️</g-emoji> Fast 3kB React alternative with the same modern API. Components &amp; Virtual DOM.</li>
</ul>
</li>
<li><a href="https://vuejs.org" rel="nofollow">Vue.js</a> - The Progressive JavaScript Framework
<ul>
<li><a href="https://github.com/vuejs/petite-vue">petite-vue</a> - 5kb subset of Vue optimized for progressive enhancement</li>
</ul>
</li>
<li><a href="https://angular.io" rel="nofollow">Angular</a> - The modern web developer's platform</li>
<li><a href="https://svelte.dev" rel="nofollow">Svelte</a> - Cybernetically enhanced web apps</li>
<li><a href="https://www.solidjs.com" rel="nofollow">Solid</a> - Solid is a purely reactive library. It was designed from the ground up with a reactive core. It's influenced by reactive principles developed by previous libraries.</li>
<li><a href="https://lit.dev" rel="nofollow">Lit</a> - Simple. Fast. Web Components.</li>
</ul>
<h2>UI &amp; Components</h2>
<h3>React</h3>
<ul>
<li><a href="https://github.com/mui-org/material-ui">Material-UI</a> - Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.</li>
<li><a href="https://github.com/ant-design/ant-design">Ant Design</a> - An enterprise-class UI design language and React UI library.</li>
<li><a href="https://github.com/chakra-ui/chakra-ui">Chakra UI</a> - <g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡️</g-emoji> Simple, Modular &amp; Accessible UI Components for your React Applications</li>
<li><a href="https://github.com/bytedance/guide">bytedance/guide</a> - A new feature guide component by react <g-emoji class="g-emoji" alias="compass" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f9ed.png">🧭</g-emoji></li>
</ul>
<h3>Vue</h3>
<ul>
<li><a href="https://github.com/vuetifyjs/vuetify">Vuetify</a> - <g-emoji class="g-emoji" alias="dragon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f409.png">🐉</g-emoji> Material Component Framework for Vue</li>
<li><a href="https://github.com/youzan/vant">Vant</a> - Lightweight Mobile UI Components built on Vue</li>
<li><a href="https://github.com/vueComponent/ant-design-vue">Ant Design Vue</a> - <g-emoji class="g-emoji" alias="rainbow" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f308.png">🌈</g-emoji> An enterprise-class UI components based on Ant Design and Vue. <g-emoji class="g-emoji" alias="ant" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41c.png">🐜</g-emoji></li>
<li><a href="https://github.com/ElemeFE/element">Element</a> - A Vue.js 2.0 UI Toolkit for Web
<ul>
<li><a href="https://github.com/element-plus/element-plus">Element Plus</a> - <g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png">🎉</g-emoji> A Vue.js 3.0 UI Library made by Element team</li>
</ul>
</li>
<li><a href="https://github.com/jdf2e/nutui">NutUI 3</a> - 京东风格移动端 Vue2、Vue3 组件库 (A Vue.js UI Toolkit for Mobile Web)</li>
<li><a href="https://github.com/pikax/vue-composable">vue-composable</a> - Vue composition-api composable components. i18n, validation, pagination, fetch, etc. +50 different composables</li>
<li><a href="https://github.com/lusaxweb/vuesax">vuesax</a> - New Framework Components for Vue.js 2</li>
</ul>
<h2>Surveys</h2>
<ul>
<li><a href="https://w3techs.com" rel="nofollow">W3Techs - extensive and reliable web technology surveys</a> - W3Techs provides information about the usage of various types of technologies on the web.</li>
</ul>
<h2>RegExp</h2>
<ul>
<li><a href="https://regexper.com/" rel="nofollow">Regexper</a> - Regular expression visualizer using railroad diagrams</li>
<li><a href="https://regexr.com/" rel="nofollow">RegExr: Learn, Build, &amp; Test RegEx</a> - RegExr is an online tool to learn, build, &amp; test Regular Expressions (RegEx / RegExp).</li>
<li><a href="https://www.regular-expressions.info/" rel="nofollow">Regular-Expressions.info - Regex Tutorial, Examples and Reference - Regexp Patterns</a> - At Regular-Expressions.info you will find a wide range of in-depth information about a powerful search pattern language called regular expressions.</li>
<li><a href="https://extendsclass.com/regex-tester.html" rel="nofollow">Online Regex tester and visualizer - Python, PHP, Ruby, JavaScript, Java</a> - Online regular expression tester for Python, PHP, Ruby, JS, Java and MySQL. Regex visualizer. Syntax highlighting. Cheatsheet. Generate string corresponding to a regex.</li>
<li><a href="https://www.debuggex.com/" rel="nofollow">Debuggex: Online visual regex tester. JavaScript, Python, and PCRE.</a> - Test your regex by visualizing it with a live editor. JavaScript, Python, and PCRE.</li>
<li><a href="https://www.freeformatter.com/regex-tester.html" rel="nofollow">Free Online Regular Expression Tester - FreeFormatter.com</a> - Free online regular expression tester with cheatsheet and most common solutions to common problems</li>
</ul>
<h2>Blog</h2>
<ul>
<li><a href="https://2ality.com" rel="nofollow">2ality</a> – JavaScript and more</li>
<li><a href="https://alligator.io" rel="nofollow">Front-end Web Development, Chewed Up ← Alligator.io</a> - Learn Angular 2+, Vue.js, React, TypeScript, Ionic, JavaScript (ES6/ES2015+) &amp; CSS with short, straightforward posts.</li>
<li><a href="https://overreacted.io" rel="nofollow">Overreacted</a> - Personal blog by Dan Abramov. I explain with words and code.</li>
<li><a href="https://www.robinwieruch.de" rel="nofollow">RWieruch</a> - Software Engineer for React.js, Node.js, GraphQL and JavaScript. Based in Berlin, German/English speaking. Consulting/Freelancing for Web Development project: Code Audits/Reviews, Workshops, Training, Implementation ...</li>
<li><a href="https://daveceddia.com" rel="nofollow">Dave Ceddia</a> - Articles to help you learn and master frontend development with React.</li>
<li><a href="https://charliegerard.dev" rel="nofollow">Charlie Gerard | Senior frontend developer &amp; Creative Technologist</a> - Collection of side projects, conference talks and blog posts experimenting with frontend technologies and human-computer interaction.</li>
<li><a href="https://lea.verou.me/" rel="nofollow">Lea Verou – Life at the bleeding edge (of web standards)</a></li>
<li><a href="https://chriscoyier.net/" rel="nofollow">Blog - Chris Coyier</a></li>
<li><a href="https://flaviocopes.com/" rel="nofollow">Flavio Copes</a> - JavaScript and Web Development Tutorials</li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[WebAssembly Series]]></title>
  <link>https://github.com/lencx/z/discussions/22</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/22</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<h2>Guide</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly" rel="nofollow">MDN WebAssembly</a></li>
<li><a href="https://hacks.mozilla.org/category/webassembly/" rel="nofollow">[Mozilla Hacks] WebAssembly Articles</a> - Articles posted in WebAssembly</li>
<li><a href="https://webassembly.org" rel="nofollow">webassembly.org</a> - WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.</li>
<li><a href="https://bytecodealliance.org/articles/" rel="nofollow">Bytecode Alliance</a> - The Bytecode Alliance is a nonprofit organization dedicated to creating secure new software foundations, building on standards such as WebAssembly and WebAssembly System Interface (WASI).</li>
<li><a href="https://rustwasm.github.io/docs/book" rel="nofollow">Rust <g-emoji class="g-emoji" alias="crab" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f980.png">🦀</g-emoji>   and WebAssembly <g-emoji class="g-emoji" alias="spider_web" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f578.png">🕸</g-emoji>   </a> - This small book describes how to use Rust and WebAssembly together.</li>
<li><a href="https://github.com/appcypher/awesome-wasm-langs">Awesome WebAssembly Languages</a> - <g-emoji class="g-emoji" alias="sunglasses" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png">😎</g-emoji>  A curated list of languages that compile directly to or have their VMs in WebAssembly</li>
<li><a href="https://wasmweekly.news" rel="nofollow">WebAssembly Weekly</a> - A weekly newsletter for keeping on top of what's new in the world of WebAssembly, with tutorials, examples, articles, and more.</li>
<li><a href="https://github.com/mbasso/awesome-wasm">Awesome Wasm</a> - <g-emoji class="g-emoji" alias="sunglasses" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png">😎</g-emoji>  Curated list of awesome things regarding WebAssembly (wasm) ecosystem.</li>
<li><a href="https://wasmbyexample.dev/home.en-us.html" rel="nofollow">Wasm By Example</a> - A hands-on introduction into WebAssembly ( Wasm ). Containing simple wasm examples and wasm tutorials on how to implement concepts and various tasks using WebAssembly.</li>
</ul>
<h2>WASI &amp; VM &amp; VDOM</h2>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime">wasmtime</a> - Standalone JIT-style runtime for WebAssembly, using Cranelift</li>
<li><a href="https://github.com/wasm3/wasm3">Wasm3</a> - <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji>  The fastest WebAssembly interpreter, and the most universal runtime</li>
<li><a href="https://github.com/wasmerio/wasmer">Wasmer</a> - <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji>  The leading WebAssembly Runtime supporting WASI and Emscripten.</li>
<li><a href="https://github.com/bytecodealliance/lucet">Lucet</a> - Lucet, the Sandboxing WebAssembly Compiler.</li>
<li><a href="https://github.com/WasmEdge/WasmEdge">WasmEdge</a> - WasmEdge Runtime is a high-performance, extensible, and hardware optimized WebAssembly Virtual Machine for automotive, cloud, AI, and blockchain applications.</li>
<li><a href="https://github.com/mbasso/asm-dom">asm-dom</a> - A minimal WebAssembly virtual DOM to build C++ SPA (Single page applications)</li>
</ul>
<h2>Tools</h2>
<ul>
<li><a href="https://wapm.io" rel="nofollow">wapm</a> - <code>WAPM</code> is the WebAssembly Package Manager.</li>
<li><a href="https://github.com/thedodd/trunk">trunk</a> - Build, bundle &amp; ship your Rust WASM application to the web.</li>
<li><a href="https://github.com/bytecodealliance/wasm-tools">wasm-tools</a> - Rust tooling for low-level manipulation of WebAssembly modules.</li>
<li><a href="https://github.com/rustwasm/wasm-pack">wasm-pack</a> - <g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png">📦</g-emoji>  <g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png">✨</g-emoji>  your favorite rust -&gt; wasm workflow tool!</li>
</ul>
<h2>Optimizing</h2>
<ul>
<li><a href="https://rustwasm.github.io/book/reference/code-size.html" rel="nofollow">Shrinking <code>.wasm</code> Code Size</a>
<ul>
<li><a href="https://github.com/WebAssembly/binaryen">Binaryen</a> - Binaryen is a compiler and toolchain infrastructure library for WebAssembly, written in C++. It aims to make compiling to WebAssembly easy, fast, and effective.</li>
<li><a href="https://github.com/rustwasm/twiggy">Twiggy</a> - Twiggy <g-emoji class="g-emoji" alias="seedling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f331.png">🌱</g-emoji>  is a code size profiler</li>
</ul>
</li>
<li><a href="https://emscripten.org/docs/optimizing/Optimizing-Code.html" rel="nofollow">Optimizing Code (<code>cpp</code>)</a></li>
<li><a href="https://arxiv.org/pdf/2002.10213.pdf" rel="nofollow">Superoptimization of WebAssembly Bytecode</a></li>
</ul>
<h2>Open Source</h2>
<ul>
<li><a href="https://github.com/lencx/vite-plugin-rsw">vite-plugin-rsw</a> - <g-emoji class="g-emoji" alias="crab" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f980.png">🦀</g-emoji>  wasm-pack plugin for Vite</li>
<li><a href="https://github.com/lencx/rsw-node">rsw-node</a> - <g-emoji class="g-emoji" alias="white_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26aa.png">⚪️</g-emoji>  <code>wasm-pack build</code> executed in remote deployment</li>
<li><a href="https://github.com/GoogleChromeLabs/wasi-fs-access">wasi-fs-access</a> - This is a demo shell powered by WebAssembly, WASI, Asyncify and File System Access API.</li>
<li><a href="https://ffmpegwasm.github.io" rel="nofollow">FFMPEG.WASM</a> - ffmpeg.wasm is a pure WebAssembly / JavaScript port of FFmpeg. It enables video &amp; audio record, convert and stream right inside browsers.</li>
<li><a href="https://github.com/ColinEberhardt/wasm-rust-chip8">wasm-rust-chip8</a> - A WebAssembly CHIP-8 emulator written with Rust</li>
<li><a href="https://bbodi.github.io/notecalc3" rel="nofollow">NoteCalc</a> -  is a handy notepad with a smart builtin calculator.</li>
<li><a href="https://github.com/PaddiM8/kalker">Kalker/kalk</a> - is a calculator with math syntax that supports user-defined variables and functions, complex numbers, and estimation of derivatives and integrals</li>
<li><a href="https://github.com/torch2424/wasmboy">wasmboy</a> - Game Boy / Game Boy Color Emulator Library, <g-emoji class="g-emoji" alias="video_game" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png">🎮</g-emoji>   written for WebAssembly using AssemblyScript. <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji>  Demos built with Preact and Svelte. <g-emoji class="g-emoji" alias="atom_symbol" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/269b.png">⚛️</g-emoji></li>
<li><a href="https://github.com/38/plotters">Plotters</a> - A rust drawing library for high quality data plotting for both WASM and native, statically and realtimely <g-emoji class="g-emoji" alias="crab" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f980.png">🦀</g-emoji>   <g-emoji class="g-emoji" alias="chart_with_upwards_trend" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c8.png">📈</g-emoji>  <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji></li>
<li><a href="https://github.com/tomaka/redshirt">redshirt</a> - The redshirt operating system is an experiment to build some kind of operating-system-like environment where executables are all in Wasm and are loaded from an IPFS-like decentralized network.</li>
<li><a href="https://github.com/silvia-odwyer/photon">Photon</a> - <g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡</g-emoji>  Rust/WebAssembly image processing library</li>
<li><a href="https://github.com/rsms/markdown-wasm">markdown-wasm</a> - Markdown parser and HTML generator implemented in WebAssembly, based on md4c.</li>
<li><a href="https://github.com/Daninet/hash-wasm">hash-wasm</a> - Hash-WASM is a <g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡</g-emoji>  lightning fast<g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡</g-emoji>  hash function library for browsers and Node.js. It is using hand-tuned WebAssembly binaries to calculate the hash faster than other libraries.</li>
<li><a href="https://github.com/cloudflare/serde-wasm-bindgen">serde-wasm-bindgen</a> - Native integration of <a href="https://serde.rs" rel="nofollow">Serde</a> with <a href="https://github.com/rustwasm/wasm-bindgen">wasm-bindgen</a></li>
<li><a href="https://github.com/sycamore-rs/sycamore">sycamore</a> - A reactive DOM library for Rust in WASM.</li>
<li><a href="https://github.com/samthor/gumnut">gumnut</a> - JS parser in Web Assembly / C.</li>
<li><a href="https://github.com/Birch-san/box2d-wasm">box2d-wasm</a> - Box2D physics engine compiled to WebAssembly. Supports TypeScript and ES modules.</li>
<li><a href="https://github.com/tensorflow/tfjs">TensorFlow.js</a> - A WebGL accelerated JavaScript library for training and deploying ML models.</li>
</ul>
<h2>Article</h2>
<ul>
<li><a href="https://lencx.github.io/book/wasm/rust_wasm_frontend.html" rel="nofollow">WebAssembly入门</a></li>
<li><a href="https://www.yuque.com/kiwenlau/blog/zg3349" rel="nofollow">十年磨一剑，WebAssembly是如何诞生的？</a></li>
<li><a href="https://blog.scottlogic.com/2021/06/21/state-of-wasm.html" rel="nofollow">The State of WebAssembly 2021</a></li>
<li><a href="https://web.dev/webassembly-threads/" rel="nofollow">Using WebAssembly threads from C, C++ and Rust</a></li>
<li><a href="https://wasmbook.com/" rel="nofollow">WasmBook</a> - Rick Battagline's WebAssembly Playground</li>
<li><a href="https://surma.dev/things/js-to-asc/" rel="nofollow">Is WebAssembly magic performance pixie dust?</a></li>
<li><a href="https://www.edx.org/course/webassembly-actors-from-cloud-to-edge" rel="nofollow">WebAssembly Actors: From Cloud to Edge</a> - Embrace the actor model to build portable, secure, lightweight WebAssembly modules that thrive in the cloud, at the edge, and anywhere in between.</li>
<li><a href="https://blog.ttulka.com/learning-webassembly-series" rel="nofollow">Learning WebAssembly Series</a> - A series of learning texts covering the first steps with WebAssembly for complete beginners.</li>
<li><a href="https://blog.scottlogic.com/2020/11/23/ffmpeg-webassembly.html" rel="nofollow">In-browser transcoding of video files with FFmpeg and WebAssembly</a></li>
<li><a href="https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface" rel="nofollow">Standardizing WASI: A system interface to run WebAssembly outside the web</a></li>
<li><a href="https://paulbutler.org/2020/the-webassembly-app-gap" rel="nofollow">The WebAssembly App Gap</a></li>
<li><a href="https://developer.ibm.com/articles/why-webassembly-and-rust-together-improve-nodejs-performance" rel="nofollow">Why using WebAssembly and Rust together improves Node.js performance</a></li>
<li><a href="https://v8.dev/docs/wasm-compilation-pipeline" rel="nofollow">[V8] WebAssembly compilation pipeline</a></li>
<li><a href="https://pspdfkit.com/blog/2018/optimize-webassembly-startup-performance/" rel="nofollow">Optimizing WebAssembly Startup Time</a></li>
<li><a href="https://www.cs.cornell.edu/courses/cs6120/2019fa/blog/wasm/" rel="nofollow">Bringing You Up to Speed on How Compiling WebAssembly is Faster</a></li>
<li><a href="https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html#getting-the-code" rel="nofollow">Maybe you don't need Rust and WASM to speed up your JS</a></li>
<li><a href="https://thenewstack.io/using-web-assembly-written-in-rust-on-the-server-side/" rel="nofollow">Using WebAssembly Written in Rust on the Server-Side</a></li>
<li><a href="https://thenewstack.io/the-pain-of-debugging-webassembly/" rel="nofollow">The Pain of Debugging WebAssembly</a></li>
<li><a href="https://thenewstack.io/kubecon-eu-why-webassembly-is-more-than-a-javascript-replacement/" rel="nofollow">KubeCon EU: WebAssembly Is More Than a JavaScript Replacement</a></li>
<li><a href="https://thenewstack.io/why-webassembly-modules-could-be-the-new-de-facto-unit-of-compute/" rel="nofollow">Why WebAssembly Modules Could Be the New de Facto Unit of Compute</a></li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[阅读打卡]]></title>
  <link>https://github.com/lencx/z/discussions/44</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/44</guid>
  <pubDate>2021-07-14</pubDate>
  <description><![CDATA[<ul>
<li><a href="https://web.dev/webassembly-threads/" rel="nofollow">Using WebAssembly threads from C, C++ and Rust</a></li>
<li><a href="https://www.notion.so/blog/data-model-behind-notion" rel="nofollow"><g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">🔥</g-emoji> The data model behind Notion's flexibility</a></li>
<li><a href="https://levelup.gitconnected.com/how-to-design-a-system-to-scale-to-your-first-100-million-users-4450a2f9703d" rel="nofollow">How to design a system to scale to your first 100 million users</a></li>
<li><a href="https://overreacted.io/npm-audit-broken-by-design/" rel="nofollow">npm audit: Broken by Design</a></li>
<li><a href="https://research.protocol.ai/blog/2021/designing-a-dataflow-editor-with-typescript-and-react/" rel="nofollow"><g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">🔥</g-emoji> Designing a Dataflow Editor with TypeScript and React</a></li>
<li><a href="https://www.sitepoint.com/building-webrtc-video-chat-applications/" rel="nofollow">Building WebRTC Video Chat Applications</a></li>
<li><a href="https://github.com/hieunc229/copilot-clone">Captain Stack — Code suggestion for VSCode</a> - This feature is somewhat similar to Github Copilot's code suggestion. But instead of using AI, it sends your search query to Google, then retrieves StackOverflow answers and autocompletes them for you.</li>
<li><a href="https://2ality.com/2021/06/temporal-api.html" rel="nofollow">Temporal: getting started with JavaScript’s new date time API</a></li>
<li><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way"><g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">🔥</g-emoji> 提問的智慧</a> - 本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案</li>
<li><a href="https://dev.to/ryansolid/solidjs-official-release-the-long-road-to-1-0-4ldd" rel="nofollow">SolidJS Official Release: The long road to 1.0</a></li>
<li><a href="https://www.sitepoint.com/moving-backgrounds-when-why-how" rel="nofollow">Moving Backgrounds: When, Why, and How to Use Them</a></li>
<li><a href="https://www.sitepoint.com/typing-versus-dynamic-typing/" rel="nofollow"><g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">🔥</g-emoji> Introduction to Data Types: Static, Dynamic, Strong &amp; Weak</a> - static doesn’t necessarily mean strong and dynamic doesn’t necessarily mean weak</li>
<li><a href="https://www.freecodecamp.org/news/understanding-sorting-algorithms/" rel="nofollow">Understanding Sorting Algorithms</a></li>
<li><a href="https://hacks.mozilla.org/2021/06/implementing-private-fields-for-javascript/" rel="nofollow">Implementing Private Fields for JavaScript</a></li>
<li><a href="https://utopia.app/" rel="nofollow">Introducing Utopia</a> - Design <g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png">❤️</g-emoji> Code</li>
<li><a href="https://michaelscodingspot.com/javascript-performance-apis/" rel="nofollow">New browser APIs to detect JavaScript performance problems in production</a></li>
<li><a href="https://www.sitepoint.com/web3-new-web-new-world/?utm_medium=email&amp;utm_campaign=spw-28&amp;utm_source=sitepoint-weekly" rel="nofollow">Web3: A New Web for a New World</a></li>
<li><a href="https://dev.to/mehmehmehlol/intro-to-asynchronous-javascript-g9e" rel="nofollow">Intro to Asynchronous JavaScript</a></li>
<li><a href="https://cscalfani.medium.com/how-to-write-a-programming-book-76ab4f8a7071" rel="nofollow"><g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png">🔥</g-emoji> How To Write a Programming Book</a></li>
<li><a href="https://naruhodo.dev/what-is-vite-and-how-to-use-it-with-react/" rel="nofollow">What is Vite and how to use it with React</a></li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[Terminal Series]]></title>
  <link>https://github.com/lencx/z/discussions/27</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/27</guid>
  <pubDate>2021-07-12</pubDate>
  <description><![CDATA[<ul>
<li>
<p><a href="https://github.com/microsoft/terminal">«win» Windows Terminal</a> - The new Windows Terminal and the original Windows console host, all in the same place!</p>
</li>
<li>
<p><a href="https://github.com/ohmyzsh/ohmyzsh">ohmyzsh</a> - Oh My Zsh will not make you a 10x developer...but you may feel like one.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="# install
sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;
# or
sh -c &quot;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&quot;
"><pre><span class="pl-c"><span class="pl-c">#</span> install</span>
sh -c <span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="pl-pds">)</span></span><span class="pl-pds">"</span></span>
<span class="pl-c"><span class="pl-c">#</span> or</span>
sh -c <span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -<span class="pl-pds">)</span></span><span class="pl-pds">"</span></span></pre></div>
<ul>
<li><a href="https://github.com/zsh-users/antigen">antigen</a> - The plugin manager for zsh.</li>
<li><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a> - Fish-like autosuggestions for zsh.</li>
<li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a> - Fish shell like syntax highlighting for Zsh.</li>
<li><a href="https://github.com/zsh-users/zsh-history-substring-search">history-substring-search</a> - <g-emoji class="g-emoji" alias="tropical_fish" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f420.png">🐠</g-emoji> ZSH port of Fish history search (up arrow)</li>
</ul>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="# @see: https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md
# step1:
# 1.
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
# 2.
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
# 3.
git clone https://github.com/zsh-users/zsh-history-substring-search ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
# step2: ~/.zshrc
plugins=(
  [plugins...]
  zsh-autosuggestions
  zsh-syntax-highlighting
  history-substring-search
)
"><pre><span class="pl-c"><span class="pl-c">#</span> @see: https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md</span>
<span class="pl-c"><span class="pl-c">#</span> step1:</span>
<span class="pl-c"><span class="pl-c">#</span> 1.</span>
git clone https://github.com/zsh-users/zsh-autosuggestions <span class="pl-smi">${ZSH_CUSTOM<span class="pl-k">:-</span>~<span class="pl-k">/</span>.oh-my-zsh<span class="pl-k">/</span>custom}</span>/plugins/zsh-autosuggestions
<span class="pl-c"><span class="pl-c">#</span> 2.</span>
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="pl-smi">${ZSH_CUSTOM<span class="pl-k">:-</span>~<span class="pl-k">/</span>.oh-my-zsh<span class="pl-k">/</span>custom}</span>/plugins/zsh-syntax-highlighting
<span class="pl-c"><span class="pl-c">#</span> 3.</span>
git clone https://github.com/zsh-users/zsh-history-substring-search <span class="pl-smi">${ZSH_CUSTOM<span class="pl-k">:-</span>~<span class="pl-k">/</span>.oh-my-zsh<span class="pl-k">/</span>custom}</span>/plugins/zsh-history-substring-search
<span class="pl-c"><span class="pl-c">#</span> step2: ~/.zshrc</span>
plugins=(
  [plugins...]
  zsh-autosuggestions
  zsh-syntax-highlighting
  history-substring-search
)</pre></div>
<ul>
<li><a href="https://github.com/sobolevn/wakatime-zsh-plugin">wakatime</a> - <g-emoji class="g-emoji" alias="clock3" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f552.png">🕒</g-emoji>Track how much time you have spent in your terminal!</li>
</ul>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="# preinstall
# step1:
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
# step2:
sudo python get-pip.py
############
# @see: https://wakatime.com/terminal
# step1:
sudo pip install wakatime
# step2:
cd ~/.oh-my-zsh/custom/plugins &amp;&amp; git clone https://github.com/sobolevn/wakatime-zsh-plugin.git wakatime
# step3:
# add `wakatime` to the list of `plugins` in your `~/.zshrc` file
# step4:
# Make sure your `API key` is in your `~/.wakatime.cfg` file.
"><pre><span class="pl-c"><span class="pl-c">#</span> preinstall</span>
<span class="pl-c"><span class="pl-c">#</span> step1:</span>
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
<span class="pl-c"><span class="pl-c">#</span> step2:</span>
sudo python get-pip.py
<span class="pl-c"><span class="pl-c">#</span>###########</span>
<span class="pl-c"><span class="pl-c">#</span> @see: https://wakatime.com/terminal</span>
<span class="pl-c"><span class="pl-c">#</span> step1:</span>
sudo pip install wakatime
<span class="pl-c"><span class="pl-c">#</span> step2:</span>
<span class="pl-c1">cd</span> <span class="pl-k">~</span>/.oh-my-zsh/custom/plugins <span class="pl-k">&amp;&amp;</span> git clone https://github.com/sobolevn/wakatime-zsh-plugin.git wakatime
<span class="pl-c"><span class="pl-c">#</span> step3:</span>
<span class="pl-c"><span class="pl-c">#</span> add `wakatime` to the list of `plugins` in your `~/.zshrc` file</span>
<span class="pl-c"><span class="pl-c">#</span> step4:</span>
<span class="pl-c"><span class="pl-c">#</span> Make sure your `API key` is in your `~/.wakatime.cfg` file.</span></pre></div>
</li>
<li>
<p><a href="https://github.com/rupa/z">z</a> - jump around.</p>
</li>
<li>
<p><a href="https://github.com/cli/cli">GitHub CLI</a> - GitHub’s official command line tool.</p>
</li>
<li>
<p><a href="https://asciinema.org" rel="nofollow">asciinema</a> - Record and share your terminal sessions, the right way.</p>
</li>
<li>
<p><a href="https://github.com/sharkdp/bat">bat</a> - A cat(1) clone with wings.</p>
</li>
<li>
<p><a href="https://github.com/dylanaraps/fff">fff</a> - <g-emoji class="g-emoji" alias="file_folder" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c1.png">📁</g-emoji> A simple file manager written in bash.</p>
</li>
<li>
<p><a href="https://github.com/tmux/tmux">tmux</a> - is a terminal multiplexer.</p>
</li>
<li>
<p><a href="https://github.com/jonas/tig">tig</a> - Text-mode interface for git.</p>
</li>
<li>
<p><a href="https://github.com/starship/starship">starship</a> - <g-emoji class="g-emoji" alias="comet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2604.png">☄</g-emoji><g-emoji class="g-emoji" alias="milky_way" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30c.png">🌌️</g-emoji> The minimal, blazing-fast, and infinitely customizable prompt for any shell!</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="curl -fsSL https://starship.rs/install.sh | bash
vi ~/.zshrc
eval &quot;$(starship init zsh)&quot;
"><pre>curl -fsSL https://starship.rs/install.sh <span class="pl-k">|</span> bash
vi <span class="pl-k">~</span>/.zshrc
<span class="pl-c1">eval</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>starship init zsh<span class="pl-pds">)</span></span><span class="pl-pds">"</span></span></pre></div>
</li>
<li>
<p><a href="https://github.com/kornelski/cavif">cavif</a> - PNG/JPEG to AVIF converter.</p>
</li>
<li>
<p><a href="https://github.com/BurntSushi/ripgrep">ripgrep</a> - ripgrep recursively searches directories for a regex pattern.</p>
</li>
<li>
<p><a href="https://github.com/sharkdp/fd">fd</a> - A simple, fast and user-friendly alternative to 'find'</p>
</li>
<li>
<p><a href="https://github.com/ogham/exa">exa</a> - A modern version of ‘ls’.</p>
</li>
<li>
<p><a href="https://github.com/Peltoche/lsd">lsd</a> - The next gen ls command.</p>
</li>
<li>
<p><a href="https://github.com/sharkdp/hexyl">hexyl</a> - A command-line hex viewer.</p>
</li>
<li>
<p><a href="https://github.com/BurntSushi/xsv">xsv</a> - A fast CSV command line toolkit written in Rust.</p>
</li>
<li>
<p><a href="https://github.com/wfxr/csview">csview</a> - <g-emoji class="g-emoji" alias="fax" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e0.png">📠</g-emoji> A high performance csv viewer with cjk/emoji support.</p>
</li>
<li>
<p><a href="https://github.com/nivekuil/rip">rip(Rm ImProved)</a> - A safe and ergonomic alternative to rm.</p>
</li>
<li>
<p><a href="https://github.com/vmchale/tin-summer">The Tin Summer</a> - Find build artifacts that are taking up disk space.</p>
</li>
<li>
<p><a href="https://github.com/saschagrunert/git-journal">git-journal</a> - <g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png">📖</g-emoji> The Git Commit Message and Changelog Generation Framework.</p>
</li>
<li>
<p><a href="https://gitlab.com/timvisee/ffsend" rel="nofollow">ffsend</a> - <g-emoji class="g-emoji" alias="mailbox_with_mail" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ec.png">📬</g-emoji> Easily and securely share files from the command line. A fully featured Firefox Send client.</p>
</li>
<li>
<p><a href="https://github.com/XAMPPRocky/tokei">Tokei</a> - Count your code, quickly.</p>
</li>
<li>
<p><a href="https://github.com/sharkdp/hyperfine">hyperfine</a> - A command-line benchmarking tool.</p>
</li>
<li>
<p><a href="https://github.com/nerdypepper/eva">eva</a> - a calculator REPL, similar to bc(1)</p>
</li>
<li>
<p><a href="https://github.com/RazrFalcon/svgcleaner">svgcleaner</a> - svgcleaner could help you to clean up your SVG files from the unnecessary data.</p>
</li>
<li>
<p><a href="https://github.com/watchexec/watchexec">watchexec</a> - Executes commands in response to file modifications.</p>
</li>
<li>
<p><a href="https://github.com/dalance/procs">procs</a> - A modern replacement for ps written in Rust.</p>
</li>
<li>
<p><a href="https://github.com/cli/cli">GitHub CLI</a> - GitHub’s official command line tool.</p>
</li>
<li>
<p><a href="https://github.com/alacritty/alacritty">Alacritty</a> - A cross-platform, GPU-accelerated terminal emulator.</p>
</li>
<li>
<p><a href="https://github.com/willdoescode/nat">nat</a> - <g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡️</g-emoji>the 'ls' replacement you never knew you needed<g-emoji class="g-emoji" alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡️</g-emoji></p>
</li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[macOS Series]]></title>
  <link>https://github.com/lencx/z/discussions/23</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/23</guid>
  <pubDate>2021-07-08</pubDate>
  <description><![CDATA[<h2>APP</h2>
<ul>
<li><a href="https://github.com/jaywcjlove/awesome-mac">Awesome Mac</a> -  Now we have become very big, Different from the original idea. Collect premium software in various categories.</li>
<li><a href="https://github.com/serhii-londar/open-source-mac-os-apps">Awesome macOS open source applications</a> - <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji> Awesome list of open source applications for macOS.</li>
<li><a href="https://www.mediaatelier.com/CheatSheet" rel="nofollow">CheatSheet</a> - Know your short cuts</li>
<li><a href="https://xnipapp.com/" rel="nofollow">Xnip</a> - Handy Screenshot App for Mac</li>
<li><a href="https://github.com/ripperhe/Bob">Bob</a> - Bob 是一款 Mac 端翻译软件，支持划词翻译、截图翻译以及手动输入翻译。</li>
<li><a href="https://github.com/gbammc/Thor">thor</a> - Switch the right application ASAP.</li>
<li><a href="https://getkap.co" rel="nofollow">Kap</a> - An open-source screen recorder built with web technology</li>
<li><a href="https://imageoptim.com/mac" rel="nofollow">ImageOptim</a> - Removes bloated metadata. Saves disk space &amp; bandwidth by compressing images without losing quality.</li>
<li><a href="https://setapp.com/apps/istat-menus" rel="nofollow">iStat Menus</a> - An advanced system monitor for your menubar.</li>
<li><a href="https://iterm2.com/" rel="nofollow">iTerm2</a> - iTerm2 is a replacement for Terminal and the successor to iTerm.</li>
<li><a href="https://maccy.app/" rel="nofollow">Maccy</a> - Clipboard manager for macOS which does one job - keep your copy history at hand. Period.</li>
<li><a href="https://github.com/dwarvesf/hidden">Hidden Bar</a> - An ultra-light MacOS utility that helps hide menu bar icons</li>
<li><a href="https://github.com/rxhanson/Rectangle">Rectangle</a> - Move and resize windows on macOS with keyboard shortcuts and snap areas.</li>
<li><a href="https://dropoverapp.com/" rel="nofollow">Dropover</a> - Dropover is a utility that makes it easier to manage and move content between folders, applications, windows and workspaces using Drag and Drop.</li>
<li><a href="https://github.com/sindresorhus/System-Color-Picker">System Color Picker</a> - The macOS color picker as an app with more features</li>
<li><a href="https://iina.io" rel="nofollow">IINA</a> - The modern media player for macOS.</li>
<li><a href="https://github.com/pock/pock">Pock</a> - Widgets manager for MacBook Touch Bar</li>
<li><a href="https://github.com/mas-cli/mas">mas</a> - <g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png">📦</g-emoji> Mac App Store command line interface</li>
<li><a href="https://sindresorhus.com/plash" rel="nofollow">Plash</a> - Make any website your desktop wallpaper</li>
</ul>
<h2>Keyboard Shortcuts</h2>
<table role="table">
<thead>
<tr>
<th>键名</th>
<th>符号</th>
<th>键名</th>
<th>符号</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command</td>
<td>⌘</td>
<td>Option</td>
<td>⌥</td>
</tr>
<tr>
<td>Ctrl</td>
<td>⌃</td>
<td>Shift</td>
<td>⇧</td>
</tr>
<tr>
<td>Tab</td>
<td>⇥</td>
<td>Delete</td>
<td>⌫</td>
</tr>
<tr>
<td>Enter</td>
<td>⏎</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>]]></description>
</item>
<item>
  <title><![CDATA[TODO]]></title>
  <link>https://github.com/lencx/z/discussions/20</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/20</guid>
  <pubDate>2021-07-07</pubDate>
  <description><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> rust  重构 rsw
<ul>
<li>文件热编译</li>
<li>加载配置</li>
<li>二进制包</li>
<li>与 node 绑定</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> js 学习计划
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> <a href="https://exploringjs.com/impatient-js/toc.html" rel="nofollow">JavaScript for impatient programmers</a></li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> 移除 fzj token</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API" rel="nofollow">WebRTC 学习</a></li>
</ul>
<h3>开源</h3>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> <a href="https://github.com/Privoce/SocialRSS">SocialRSS</a> 开发</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <code>xc-app</code> - <a href="https://github.com/lencx/create-xc-app/issues/1" data-hovercard-type="issue" data-hovercard-url="/lencx/create-xc-app/issues/1/hovercard">#1 脚手架优化</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <code>rsw</code> - 如果包名重复，启动会报错 <code>npm -g unlink &lt;pkg&gt;</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <code>rsw</code> - <a href="https://github.com/lencx/vite-plugin-rsw/issues/9" data-hovercard-type="issue" data-hovercard-url="/lencx/vite-plugin-rsw/issues/9/hovercard">#9 rsw插件模板生成</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <a href="https://github.com/lencx/rgd">https://github.com/lencx/rgd</a> - github discussions 生成 RSS</li>
</ul>]]></description>
</item>
<item>
  <title><![CDATA[js 中的语句 & 表达式 & 分号]]></title>
  <link>https://github.com/lencx/z/discussions/48</link>
  <guid isPermaLink="false">https://github.com/lencx/z/discussions/48</guid>
  <pubDate>2021-07-06</pubDate>
  <description><![CDATA[<ul>
<li>语句是一段可以执行并执行某种操作的代码</li>
<li>表达式是一段代码，可以对其进行求值以产生一个值</li>
<li>表达式可以用作语句，被称为表达式语句。反之则不然：当上下文需要表达式时，不能使用语句</li>
<li>每条语句都以分号结尾</li>
<li>以块结尾的语句
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="function foo() {
  // ...
}
if (x &gt; 0) {
  // ...  
}
"><pre><span class="pl-k">function</span> <span class="pl-en">foo</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// ...</span>
<span class="pl-kos">}</span>
<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">x</span> <span class="pl-c1">&gt;</span> <span class="pl-c1">0</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-c">// ...  </span>
<span class="pl-kos">}</span></pre></div>
</li>
<li>控制语句的主体本身就是一个语句
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="while (condition)
  statement
"><pre><span class="pl-k">while</span> <span class="pl-kos">(</span><span class="pl-s1">condition</span><span class="pl-kos">)</span>
  <span class="pl-s1">statement</span></pre></div>
</li>
</ul>
<hr>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="// 表达式 `bar()` 可以是表达式或语句——这取决于上下文
function foo() {
  console.log(bar()) // bar() 是表达式
  bar(); // bar(); 是表达式语句
}
"><pre><span class="pl-c">// 表达式 `bar()` 可以是表达式或语句——这取决于上下文</span>
<span class="pl-k">function</span> <span class="pl-en">foo</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-en">bar</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">)</span> <span class="pl-c">// bar() 是表达式</span>
  <span class="pl-en">bar</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// bar(); 是表达式语句</span>
<span class="pl-kos">}</span></pre></div>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="// 函数声明
function foo(x) {
  return x;
}

// 函数表达式（=右侧）
const fooo = function bar(x) {
  return x;
}
"><pre><span class="pl-c">// 函数声明</span>
<span class="pl-k">function</span> <span class="pl-en">foo</span><span class="pl-kos">(</span><span class="pl-s1">x</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">return</span> <span class="pl-s1">x</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-c">// 函数表达式（=右侧）</span>
<span class="pl-k">const</span> <span class="pl-en">fooo</span> <span class="pl-c1">=</span> <span class="pl-k">function</span> <span class="pl-en">bar</span><span class="pl-kos">(</span><span class="pl-s1">x</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">return</span> <span class="pl-s1">x</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span></pre></div>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="// 对象字面量
const obj = {};

// 空代码块
{
}
"><pre><span class="pl-c">// 对象字面量</span>
<span class="pl-k">const</span> <span class="pl-s1">obj</span> <span class="pl-c1">=</span> <span class="pl-kos">{</span><span class="pl-kos">}</span><span class="pl-kos">;</span>

<span class="pl-c">// 空代码块</span>
<span class="pl-kos">{</span>
<span class="pl-kos">}</span></pre></div>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="// 整个 const 声明（一个语句）以分号结尾，但在它里面，有一个箭头函数表达式。
// 也就是说，它本身并不是以花括号结尾的语句；
// 它是嵌入的箭头函数表达式。 这就是为什么末尾有一个分号。
const foo = () =&gt; {}; 
"><pre><span class="pl-c">// 整个 const 声明（一个语句）以分号结尾，但在它里面，有一个箭头函数表达式。</span>
<span class="pl-c">// 也就是说，它本身并不是以花括号结尾的语句；</span>
<span class="pl-c">// 它是嵌入的箭头函数表达式。 这就是为什么末尾有一个分号。</span>
<span class="pl-k">const</span> <span class="pl-en">foo</span> <span class="pl-c1">=</span> <span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span><span class="pl-kos">}</span><span class="pl-kos">;</span> </pre></div>
<h2>消除歧异</h2>
<p>歧义只是语句上下文中的问题：如果 JavaScript 解析器遇到歧义语法，它不知道它是普通语句还是表达式语句。 例如：</p>
<ul>
<li>如果语句以函数开头：它是函数声明还是函数表达式？</li>
<li>如果语句以 <code>{</code> 开头：它是对象字面量还是代码块？</li>
</ul>
<p>为了解决歧义，以 <code>function</code> 或 <code>{</code> 开头的语句永远不会被解释为表达式。如果希望表达式语句以这些标记之一开头，则必须将其括在括号中。</p>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="// -------- (a) 创建函数 -------- | (b) 调用函数
(function (x) { console.log(x) })('abc');

// (a) 中的代码片段被解释为表达式，因为将其包裹在括号中。
// 如果不这样做，会得到一个语法错误，因为 JavaScript 需要一个函数声明并抱怨缺少函数名。
// 此外，不能在函数声明之后立即进行函数调用。
// Uncaught SyntaxError: Function statements require a function name
"><pre><span class="pl-c">// -------- (a) 创建函数 -------- | (b) 调用函数</span>
<span class="pl-kos">(</span><span class="pl-k">function</span> <span class="pl-kos">(</span><span class="pl-s1">x</span><span class="pl-kos">)</span> <span class="pl-kos">{</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">x</span><span class="pl-kos">)</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">(</span><span class="pl-s">'abc'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// (a) 中的代码片段被解释为表达式，因为将其包裹在括号中。</span>
<span class="pl-c">// 如果不这样做，会得到一个语法错误，因为 JavaScript 需要一个函数声明并抱怨缺少函数名。</span>
<span class="pl-c">// 此外，不能在函数声明之后立即进行函数调用。</span>
<span class="pl-c">// Uncaught SyntaxError: Function statements require a function name</span></pre></div>
<h2>自动插入分号</h2>
<blockquote>
<p>Automatic semicolon insertion (ASI)</p>
</blockquote>
<p>ASI 的工作原理如下。语句的解析继续进行，直到出现以下任一情况：</p>
<ul>
<li>分号</li>
<li>行终止符后跟非法标记</li>
</ul>
<p>换句话说，ASI 可以看作是在换行符处插入分号。</p>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="return
{
	name: 'lencx'
};


// 解析后
return;
{
  name: 'lencx';
}
;

// 1. 不带操作数的返回语句：return;
// 2. 代码块的开始：{
// 3. 表达式语句 'lencx'，标签 name
// 4. 代码块结束：}
// 5. 空语句：;
// 为什么 JavaScript 会这样做？ 它可以防止在返回后意外返回一行中的值。
"><pre><span class="pl-k">return</span>
<span class="pl-kos">{</span>
	<span class="pl-c1">name</span>: <span class="pl-s">'lencx'</span>
<span class="pl-kos">}</span><span class="pl-kos">;</span>


<span class="pl-c">// 解析后</span>
<span class="pl-k">return</span><span class="pl-kos">;</span>
<span class="pl-kos">{</span>
  name: <span class="pl-s">'lencx'</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>
<span class="pl-kos">;</span>

<span class="pl-c">// 1. 不带操作数的返回语句：return;</span>
<span class="pl-c">// 2. 代码块的开始：{</span>
<span class="pl-c">// 3. 表达式语句 'lencx'，标签 name</span>
<span class="pl-c">// 4. 代码块结束：}</span>
<span class="pl-c">// 5. 空语句：;</span>
<span class="pl-c">// 为什么 JavaScript 会这样做？ 它可以防止在返回后意外返回一行中的值。</span></pre></div>
<hr>
<ul>
<li><a href="https://exploringjs.com/impatient-js/ch_syntax.html#statement-vs-expression" rel="nofollow">Statement vs. expression</a></li>
<li><a href="https://exploringjs.com/impatient-js/ch_control-flow.html#labels" rel="nofollow">break plus label: leaving any labeled statement</a></li>
</ul>]]></description>
</item>

</channel>
</rss>